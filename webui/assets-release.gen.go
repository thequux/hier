// +build !debug

package webui

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _static_css_ie_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8d\x31\x4f\xf3\x30\x18\x06\xf7\xfe\x8a\xe7\xf3\x18\x7d\x89\x77\xd4\x64\x41\x48\x54\x82\x0d\xc4\x50\x75\x88\x9c\xc7\xe4\x05\xc7\x0e\x7e\xdd\x96\xfe\x7b\x92\x56\x42\x8c\xa7\xd3\xe9\x6c\x85\x37\x06\x97\x26\xa2\x24\xdc\xa7\x69\xee\x55\x1b\xbc\xea\xc2\xa3\x28\xbc\x84\xab\x39\x67\x29\xc4\xee\x01\x3a\xd3\x89\x17\x87\x74\x62\xce\x32\x10\x5a\x2e\x81\xda\x6c\x50\x61\x37\xcd\x29\x97\x3f\xe5\x51\x25\xbe\x2f\x4c\xf8\x14\x42\x3a\xaf\xf4\xf8\xf2\xfc\x84\x94\xc1\xaf\xa3\x9c\xfa\xc0\x58\xee\xd6\x76\xfb\xaf\xae\xf7\xe2\x97\xc7\xa1\x5b\x19\xd8\x06\x89\x9f\x18\x33\x7d\x6b\xec\xed\x32\x92\x45\xad\xb0\x71\xaa\x06\x13\x07\xe9\x5b\xa3\x2e\x93\xf1\x3f\xe6\x9c\x3e\xe8\x8a\xa4\x68\x90\x19\x16\xf1\xdb\x18\x94\xcb\xcc\xd6\x14\x7e\x17\x7b\x6d\x6d\x77\x9b\xee\x19\x07\xf1\x87\xba\xee\x50\xd9\xcd\x4f\x00\x00\x00\xff\xff\x53\x7c\x82\x7f\x0f\x01\x00\x00")

func static_css_ie_css_bytes() ([]byte, error) {
	return bindata_read(
		_static_css_ie_css,
		"static/css/ie.css",
	)
}

func static_css_ie_css() (*asset, error) {
	bytes, err := static_css_ie_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static/css/ie.css", size: 271, mode: os.FileMode(420), modTime: time.Unix(1420838733, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _static_css_print_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8d\x3d\x4f\xc6\x30\x0c\x84\xf7\xf7\x57\x9c\x32\x76\x68\x76\x44\x58\x58\x40\x82\x0d\xc4\x5c\xb5\x0e\xb5\x70\x3e\x88\x5d\xa0\xff\x9e\x36\x0c\xbc\xe3\x63\x3f\x77\xe7\x07\xbc\x91\xcc\x25\x11\xac\xe0\xbe\xa4\x3a\xa9\x8e\x78\xd5\x83\x57\x56\x44\x96\xfe\x59\x28\x72\x26\xd4\xc6\xd9\xa0\xb6\x0b\xe9\x78\xc1\x80\xc7\x54\x4b\xb3\x2b\x77\x53\xce\xef\x07\x13\x62\x11\x29\xdf\x27\x3d\xbc\x3c\x3f\xa1\x34\xd0\xe7\xc6\x5f\x93\x50\xb6\x9b\x33\x7b\x2b\x9c\x3f\xb0\x36\x8a\xc1\xf9\xbf\xce\x95\xc8\xd4\xf7\x95\x71\x56\x75\x48\xb4\xf0\x14\x5c\xbf\x38\x34\x92\xe0\xfe\x4d\x07\xdb\x2b\x05\x67\xf4\x63\xbe\xeb\xfe\x0e\x83\xbf\xfc\x06\x00\x00\xff\xff\xe3\x03\x4b\x88\xd5\x00\x00\x00")

func static_css_print_css_bytes() ([]byte, error) {
	return bindata_read(
		_static_css_print_css,
		"static/css/print.css",
	)
}

func static_css_print_css() (*asset, error) {
	bytes, err := static_css_print_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static/css/print.css", size: 213, mode: os.FileMode(420), modTime: time.Unix(1420838733, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _static_css_screen_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x58\x5d\x8f\xdb\xb6\x12\x7d\xf7\xaf\x20\x7c\x71\x81\x24\x90\x25\xdb\xfb\x91\x8d\x93\xec\x4b\xee\xc3\x0d\xd0\x3c\xb5\x40\x1f\x0b\x4a\x1c\x59\xec\x52\xa2\x96\xa4\xbc\xeb\x16\xfd\xef\x3d\xa4\x64\x4b\xf2\xba\x81\x92\x02\xbb\x40\x0b\xac\x64\x91\x1a\xce\x9c\xe1\x9c\x99\xa1\x36\x79\xc3\x7e\x26\x95\xe9\x92\x98\xd3\xec\x93\x2e\x6b\x6e\x6d\x3c\x63\x6f\xd8\xe7\x8a\xb9\x42\x5a\x96\x4b\x45\x6c\xaf\x1b\x66\x0b\xdd\x28\xc1\x1e\x8c\x74\x61\xc2\xb0\x92\xcb\x8a\x59\xb7\x57\x64\x63\xf6\x4a\x1b\x96\x51\xe5\x0c\x57\xf2\xb7\x4e\x40\x96\xb5\x36\xce\xbe\x0e\xfa\xc2\xf3\x40\x67\x63\x65\xb5\xc5\x98\x58\xae\x95\xd2\x0f\x7e\xf4\xff\x9f\xbe\xfc\xc0\xa0\x88\xee\x1b\xb9\xe3\x0a\xea\x36\x7e\xed\x07\x25\xab\x3b\x56\x18\xca\x3f\xce\x93\xd6\x60\x41\xe4\x6c\x62\x33\x43\x54\xc5\x99\xb5\x73\x56\x92\x90\xfc\xe3\xbc\x9d\x8a\x58\x6d\xf4\xaf\x94\x39\xa9\xab\x39\x33\xa4\xf0\xe2\xb8\x6e\xce\xdc\xbe\xa6\x8f\x73\x47\x8f\x2e\x09\x6b\x93\x5b\xf6\x26\x99\x61\x33\x60\x88\xd8\x55\xc4\xe2\x38\xf9\xcb\xbf\x2d\x95\x89\x69\xd2\x7d\xb2\x8e\x57\xf1\x32\xc1\xd0\x26\x59\xbb\x73\x8b\x4c\x1b\x5a\x60\x36\x5e\x8d\x70\x76\xaf\x13\x43\x96\x5c\xf2\x4b\xe3\xa4\x92\x4e\x62\xdb\x2c\xcc\x7b\xd3\x85\x2b\x55\xc4\x52\x2d\xf6\x11\x13\x72\x17\x31\x5b\x73\x38\xc1\xeb\x5a\x91\x8b\x98\x4e\xbd\x2f\x11\x93\xb9\xe1\x25\x45\xb3\x62\x15\xb1\x62\x8d\xeb\x02\xd7\x25\x2e\x40\x2e\xae\xe1\x34\x74\x28\x9d\xdd\xdd\x37\xda\x91\xdf\x03\xc8\x72\xa8\x49\x53\x83\x7b\x66\x74\xb5\x2f\xf1\x20\x04\x80\x58\xc8\xca\x6d\xc4\x32\xe9\x45\x33\x2d\x20\x2b\x08\x28\x44\x0e\xcb\x04\x39\x59\xe2\xb5\xac\x20\x78\x97\x8a\x88\xdd\x03\x15\xfe\x78\x59\x47\x33\x5b\x72\x05\x51\xeb\x8c\xbc\xa3\xf0\xab\x2b\x08\xdb\x26\xf5\x37\xc0\x70\x40\xbb\xe3\x26\x9a\x61\xa2\x81\x96\x28\x90\x83\x30\x21\xbc\x09\xbc\x15\x50\xa9\xf1\xdc\xe0\x52\x32\x9a\xe5\x92\x94\xb0\xde\xdb\x5c\x1b\x58\x57\x3c\xf5\x68\x14\x6d\xa9\x12\xd1\xcc\xf1\x54\x79\x9c\xbc\xf6\x31\x85\x81\x76\xb3\x5c\xae\x35\x96\x80\x46\x1c\xfa\x9c\xf1\x8f\xb8\xb0\x80\x1b\x27\x33\xbf\x84\x5b\x29\xc2\xca\x6a\xc7\xe1\x80\x20\xc7\xa5\xb2\xde\xc5\x94\x84\xb7\xbb\x6d\xb0\x4f\x20\xe5\xf6\xa8\xdc\x2b\x05\x56\xe6\xb5\x86\xdf\xad\xd1\xf0\x6a\x56\x52\x05\x67\x2a\x8e\x00\xe9\xc6\xd5\x0d\x2c\x7b\x26\xc0\xe7\x96\x6a\xde\xf9\xb2\xe4\x66\x0f\xbc\x12\x81\x42\x8a\x98\x3b\x20\x68\x84\xd4\xd8\x0f\xe0\xd0\xec\xf7\x19\xf3\xd3\x5b\x59\x6d\xd8\xf2\x3d\x06\x35\xe2\x01\xf2\x77\xa3\x54\x1b\x98\xec\x06\xb9\x46\x06\x20\x04\x05\x21\xeb\x0e\x13\x0b\x8b\x04\xdb\xb0\xd5\x72\xf9\x5f\x3f\xb5\x23\xef\x28\x57\x0b\x24\xde\x16\x3a\x53\x6e\xc9\xd3\xf8\xfd\xec\x8f\xd9\x91\xd2\xeb\xf5\xcb\x70\x3a\x78\xeb\x11\x2c\x0a\x92\xdb\x02\xce\xac\xc6\xb8\x2e\x9f\x1f\x57\x4b\xba\x0e\x99\xc5\x76\xfa\xc5\x1b\x56\xe9\xd3\x3d\xbb\x7e\x7e\x6c\x81\xe5\x01\x5a\xcb\x03\x28\x52\x8a\xd7\x16\xf8\x0e\x4f\x3d\x49\x16\x28\x12\xd9\x81\x39\x43\xe0\x37\xcf\x0f\xbc\xcf\xcb\x90\x7e\xc1\x05\x5f\x5f\x0f\xac\x54\x94\xf7\x04\x7e\xe8\xb8\x50\x21\xd1\xb9\x3a\x47\xe2\x52\x0a\xa1\xc6\xe1\xb8\x58\x3e\xbf\x57\xf7\xc3\x7a\x1a\x7c\x0a\x4f\xb6\x67\xcb\x01\xdd\x6a\x79\xf1\x02\xf0\x36\x29\xa1\x58\xa2\xce\xdc\x6f\x78\x1e\x2a\x56\x0f\xf7\xf8\x6e\x30\x15\x84\x82\x1f\x19\xe2\xe0\xdb\x2b\x9b\xcf\xdf\x0f\x87\x4f\xb2\xe0\xe2\x05\x2a\x07\xf7\xad\x67\x90\x05\x67\x60\xad\x56\x2f\x90\x9d\xa7\x2d\xe5\xd8\x4a\x46\xbd\xe3\xd0\x4f\xce\xf7\x90\x70\x6a\xc2\xbd\xef\x24\xa7\xbd\x23\x38\x2e\xa4\xad\x15\xdf\x6f\xda\xe8\x8d\x23\x72\x64\x9a\x75\x1c\x80\x16\xd6\x64\x89\xf5\xc0\xbb\xe3\xd0\x01\xae\xef\x90\x41\x59\x48\xba\x9c\x97\x52\x41\xa1\xe5\x95\x5d\x58\x34\x94\x7c\xac\xf5\xed\x44\xad\x71\xa9\x2b\xed\x2b\x0f\x3d\xd5\x3d\xff\x9f\xd1\x52\xb0\x1f\x61\x82\x7d\x81\xd8\x3c\x62\xf3\xcf\x15\xc8\x65\xb5\xe2\x8e\xfb\xe1\xa7\x76\x60\xfd\x33\x44\x78\xe6\x85\x8e\x2a\x47\x90\x2e\x97\x53\x21\x79\x4f\x17\x0f\x06\xc7\xa5\x8e\xde\x87\x06\xbb\xa2\x72\x78\x8d\x32\xf6\xf2\xbb\xb4\xdf\xb2\xb8\x8d\x68\xc7\xcf\x47\xdf\x8e\x43\x11\xee\x8a\x32\xa6\x42\x89\xe6\xd9\x9d\x8f\x78\x25\x36\xec\x3f\x79\x2e\xc4\xb2\x6d\xf6\xda\x4a\x1f\xed\x8d\x3f\x94\xc2\xec\x2e\xd4\xf3\x07\x29\x5c\xd1\xb7\xf4\xfe\x44\x10\xaf\xe9\x11\xc0\x1f\x07\x45\xdf\xe9\x7a\xe1\xab\xe9\xc2\x70\x21\x1b\x94\xa2\x9b\xfa\xf4\xb5\xf1\xe5\x75\xfc\xbe\xf7\x7b\x3d\x95\x3e\x4f\xfc\xee\x8a\x44\x70\xfc\x08\x71\x0c\xce\x03\xdb\xb0\x75\xfd\xc8\x10\x64\x30\x61\xe0\x79\x27\x61\xda\xd2\xff\x35\x91\x54\x3b\xa7\xcb\x29\x32\x5f\xdb\x88\x4e\xe2\xec\x5e\xf4\x14\xbb\x9a\xba\x19\x4a\x6f\xf5\x59\x6a\x2d\x71\xad\x5b\x6a\xf5\x5f\x10\xab\xa9\x6a\x5b\x2e\xc5\x28\x04\x29\x37\xe7\x1a\x67\x7b\x6c\x1e\x06\xf0\x6a\x72\x00\x9f\x28\xe7\x5d\xed\x57\xda\xf8\xca\xc2\x7d\x65\xe9\xcc\x09\x42\x55\xe4\x2d\x35\x9f\x54\xdb\xeb\xc9\xfe\x1c\x38\xe2\x8a\xbe\x3a\x1c\xda\x7d\xaa\x95\x18\x3a\x72\x3d\x39\x03\x8f\x5a\x71\xc6\x3f\x35\x71\x92\x2c\xcb\xf8\x8a\x46\x7c\xbf\x9e\x5c\xd8\x8e\x8a\xcd\xa6\x72\xc5\x22\x2b\xa4\x12\xaf\x68\x47\xd5\xeb\x36\xd7\x87\x19\x4d\x34\xde\xa1\xb7\xeb\xe9\x56\xca\xf2\x90\x45\x2d\x97\x7c\xce\x76\x89\xf4\x3d\xe5\xe9\xa0\xf0\x5f\x54\x99\x06\x2e\xff\x73\x8a\xd2\x91\x4a\xd7\xdf\x1f\xf9\x98\x70\xbc\x50\x9b\xee\xec\x77\x72\xd2\x63\x1f\xe6\x23\x3b\xef\xfe\xbe\x9d\x73\x07\xca\xdb\x91\x95\x9b\x6f\x4e\x8c\x81\x15\xc1\xbb\x63\x77\xae\x34\x87\xee\xb0\x6f\x23\xed\xdf\xbc\x57\x71\x49\xd6\xf2\x2d\x9d\x21\xcc\x20\x9d\xdf\x4d\x46\xed\xff\x59\xc1\x9d\x23\xc1\x8a\x55\x5f\xf2\xba\x4f\xf4\x9b\x36\x6b\xbe\x5a\x05\xdf\x4d\x76\xa1\x37\x85\x96\xd3\x9b\x6a\x3f\x5f\xa5\x43\xc3\xc8\x46\x8a\x27\xc7\xb7\x57\x8c\xef\xe2\x5b\xac\x7e\xf2\x71\x6c\xef\x1b\x0e\x3e\xe9\xc6\xf9\x93\x6f\xd7\x20\x8e\xf5\xab\x4b\xb0\xb6\x09\xfe\x19\x00\x00\xff\xff\x3e\x00\x38\x25\x53\x14\x00\x00")

func static_css_screen_css_bytes() ([]byte, error) {
	return bindata_read(
		_static_css_screen_css,
		"static/css/screen.css",
	)
}

func static_css_screen_css() (*asset, error) {
	bytes, err := static_css_screen_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static/css/screen.css", size: 5203, mode: os.FileMode(420), modTime: time.Unix(1420879537, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _static_hier_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func static_hier_css_bytes() ([]byte, error) {
	return bindata_read(
		_static_hier_css,
		"static/hier.css",
	)
}

func static_hier_css() (*asset, error) {
	bytes, err := static_hier_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static/hier.css", size: 0, mode: os.FileMode(420), modTime: time.Unix(1420875667, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _static_images_favicon_16_png = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x02\xd2\x02\x20\xcc\xc1\x06\x24\xe5\x3f\xff\x4f\x04\x52\x2c\xc5\x4e\x9e\x21\x1c\x40\x50\xc3\x91\xd2\x01\xe4\x73\x16\x78\x44\x16\x03\xd5\x5f\x07\x61\x46\x27\x8d\xd9\x15\x40\x41\xc9\x12\xd7\x88\x92\xe0\xfc\xb4\x92\xf2\xc4\xa2\x54\x86\xf2\xf2\x72\xbd\xcc\xbc\xec\xe2\xe4\xc4\x82\x54\xbd\xfc\xa2\xf4\xd9\xef\x6c\xa4\x80\x8a\xce\x7a\xba\x38\x86\x58\xf4\x4e\x9d\xac\xcd\xc7\x64\x28\xe2\xea\xef\x1e\x12\x30\x6b\xc2\x06\xd1\x14\x61\x13\x8d\x6b\x0d\x07\x37\x31\x04\xe8\x30\xf4\x1e\xec\x77\x3e\xc8\xe4\xb0\x89\x75\x9a\xc1\xaa\x12\x21\x03\xfe\xc3\xe5\x2f\xfe\xc4\x15\x9d\xdd\x6b\x79\xdc\xd6\xa5\x65\x15\x83\x5f\xb6\xd1\x01\xd7\xef\x56\x37\xa4\xfe\x54\x35\x46\x34\xf7\x7b\x32\xb4\x85\x7e\x30\x74\x7d\xd2\x24\x73\x79\x47\x8b\x8b\xe0\xbf\x53\x4c\x7f\xbc\x7c\x98\xfe\x4c\x4b\x2d\x98\xc9\xf2\x43\xf3\x79\x68\x81\x0f\x53\xcd\xa9\xba\xfe\x68\xd9\x3f\xa7\xaa\x1a\x33\x7c\x97\xcd\x63\x62\x70\xe2\x5b\xe6\xfc\x76\xee\x39\x83\x79\x45\x5f\x1b\x03\x3f\xd9\x6e\x69\x75\x7d\x32\xe5\x8a\xf2\x53\x03\x87\x64\x47\x9e\x3c\x1d\x8d\x66\x69\x4e\x27\xbe\xc9\x92\xe5\xf2\x11\x62\x0f\xdd\x98\x2e\x37\xde\x65\xcb\xe5\xd5\x5e\x3a\x25\x5b\x97\xa1\x80\xf9\x46\xfe\xcb\xa8\xc3\x8a\x6a\x13\xcd\x2a\xff\x9d\xfb\xcd\x28\x5f\xdf\xe0\xba\xb9\x4c\x7b\xdd\x6e\xa0\xc7\x18\x3c\x5d\xfd\x5c\xd6\x39\x25\x34\x01\x02\x00\x00\xff\xff\x57\x93\x51\x3f\x50\x01\x00\x00")

func static_images_favicon_16_png_bytes() ([]byte, error) {
	return bindata_read(
		_static_images_favicon_16_png,
		"static/images/favicon-16.png",
	)
}

func static_images_favicon_16_png() (*asset, error) {
	bytes, err := static_images_favicon_16_png_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static/images/favicon-16.png", size: 336, mode: os.FileMode(420), modTime: time.Unix(1420874047, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _static_images_favicon_32_png = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x02\xd2\x0a\x20\xcc\xc1\x06\x24\x8b\xab\xaa\xbe\x00\x29\x96\x62\x27\xcf\x10\x0e\x20\xa8\xe1\x48\xe9\x00\xf2\x39\x0b\x3c\x22\x8b\x81\xea\xaf\x83\x30\xa3\x93\xc6\xec\x0a\xa0\xa0\x64\x89\x6b\x44\x49\x70\x7e\x5a\x49\x79\x62\x51\x2a\x43\x79\x79\xb9\x5e\x66\x5e\x76\x71\x72\x62\x41\xaa\x5e\x7e\x51\xfa\xec\x77\x36\x52\x0c\x0c\x8c\x4e\x9e\x2e\x8e\x21\x11\xad\x7b\xaf\xaf\x0e\x3a\xec\x20\xd2\xf0\xb0\x5e\x59\x69\xd7\xd9\xdb\x21\xef\x78\xa4\x44\xce\x37\x1c\x7c\x64\xb0\xa0\x40\x62\x83\xa9\xeb\xf5\xd0\xad\xfc\x17\xbc\xe2\x1a\xdd\x19\x84\x83\x1a\x2d\x3b\xb6\x39\x9f\x7c\xb2\x69\xf6\x9c\xbb\xc6\x9b\xf3\x66\xff\x9f\x5d\x52\xe4\xec\x22\xb1\x9b\x61\xfa\xf3\x1a\x26\xbd\x1f\xdb\xa5\x3e\x1e\x0a\xda\x67\xa3\xd0\xba\x94\xc7\x75\xc5\x91\xed\xde\x2e\x76\x13\xde\x1a\xc9\x2c\x14\xb3\x5f\x1b\xd0\x92\x55\xc3\xc1\xf4\xc0\xc9\x58\xae\x4b\xc1\x38\xe4\xde\xf2\xd3\xc6\x72\x4d\x0c\x36\x4b\x1b\x0b\xe3\x59\x1e\x6c\xcd\x0c\xb8\xc3\xce\x58\x92\x2f\x25\xfd\xde\x39\x45\xe6\xf8\xd9\x84\xbd\x09\x51\x11\x66\xc7\x24\xd8\x13\x7a\x0a\x5b\x53\x37\xc7\x19\x94\x1a\xbb\xf9\x5e\xfe\xd8\x68\xef\x70\x78\x99\xf5\xda\x0a\xf1\x43\x05\x3f\xb8\xff\x9d\x7d\x27\xbb\x2e\xff\x67\xe4\xd9\x93\x5b\x1f\x7d\x7d\x1c\x7f\xf7\x43\x6c\x58\x8c\x19\x13\xc3\x2a\xdb\x1b\x9d\x75\x7f\x4c\xd6\xe7\x17\xfc\x3f\x13\xae\xad\xf0\x6c\xce\xfc\xc6\x35\xf5\xd5\x7b\x76\x74\xbc\x99\xc4\xf4\xaa\x70\x45\x2c\xeb\xca\xc7\x27\x19\x72\x3f\xaa\x34\xac\xab\x28\x71\x88\xb7\xd1\x3a\xa0\x2e\xc7\xfb\x40\xba\x9f\x89\xa3\x73\x35\xb3\xd3\xe3\x55\x0d\x59\xf5\x15\x0d\x53\x45\xfb\xf7\x15\x86\x36\xcc\x3d\x90\xe5\x17\x17\x31\xef\xdc\xfc\xef\x27\x19\x2e\xfc\xbb\x34\x91\xc7\x80\x45\xf0\xa9\x11\x8f\xa3\xcb\x6e\xc1\x56\x05\x95\x6f\x56\x40\x6b\xea\x1a\xff\x32\x3d\x3c\xf1\xbb\xae\x2f\x5c\xd6\x13\x18\xe4\x0c\x9e\xae\x7e\x2e\xeb\x9c\x12\x9a\x00\x01\x00\x00\xff\xff\x0e\x40\x76\x96\xc5\x01\x00\x00")

func static_images_favicon_32_png_bytes() ([]byte, error) {
	return bindata_read(
		_static_images_favicon_32_png,
		"static/images/favicon-32.png",
	)
}

func static_images_favicon_32_png() (*asset, error) {
	bytes, err := static_images_favicon_32_png_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static/images/favicon-32.png", size: 453, mode: os.FileMode(420), modTime: time.Unix(1420874047, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _static_images_logo_large_png = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x00\x4d\x0b\xb2\xf4\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\xe0\x00\x00\x00\x4b\x08\x06\x00\x00\x00\x69\xf6\x8b\xcc\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xda\x00\x00\x0d\xda\x01\x4b\x18\xf6\xeb\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x0a\xca\x49\x44\x41\x54\x78\x9c\xed\x9d\x69\x8c\x5d\x65\x19\x80\x9f\x77\x66\x5a\xb0\x04\x82\x1a\x96\x5a\x05\x09\x24\x92\x98\x1a\xb4\x4d\x20\xc6\xb8\x22\x0a\x62\xf7\x96\x6e\x33\xdd\xa6\xad\x1a\x59\x5a\xa6\x33\xed\x74\xa1\xd3\xce\x74\x3a\xed\xcc\x74\x63\xa6\x2d\x54\xec\x62\x29\x6d\x51\x31\x41\xa2\x44\x8c\x7f\xd4\x1f\x6c\x6a\xca\x12\x5b\x34\xa0\x58\x21\x34\x5a\x8a\x8a\x48\xe7\xf5\xc7\x77\xce\x9d\x7b\x67\x3d\xe7\xde\x73\xee\x77\xcf\xb9\xdf\x93\x4c\xee\x64\xee\x7b\xde\xef\x3d\xed\x7d\xee\xd9\xbe\x45\x54\x95\xa4\x21\x22\xed\xc0\x59\x55\xdd\x68\xbb\x96\xbe\x88\x48\x25\xf0\x7e\xc0\xf0\x1f\xaa\xea\xb4\x80\x79\x0f\x01\x73\x03\xe6\xbd\x4c\x55\xdf\x0a\x90\x73\x1c\xf0\x4c\xc0\x9c\x6b\x55\xb5\x39\x60\xac\x23\x20\x55\xb6\x0b\x08\x8b\x88\x6c\x03\xee\xf1\x7e\xaf\x50\xd5\x26\xcb\x25\x39\x1c\x79\x53\x61\xbb\x80\x30\xf8\xf2\x8d\xa8\x82\x4a\x53\xf9\x7a\x11\x59\x67\xb7\x2a\x87\x23\x7f\x12\x23\xa0\x88\x74\xe2\xc9\xf7\x68\x17\x1c\x68\xcf\x48\xd8\xe4\x24\x74\x24\x95\x44\x9c\x82\x7a\xf2\x2d\xf3\xe5\x9b\x70\x73\xef\x7b\x35\x75\xd0\xd3\x43\x93\x88\x68\x29\x5e\x13\x3a\x1c\x43\x51\xf2\x47\xc0\x6c\xf9\x8e\xf7\x91\x6f\xce\x44\x38\xb0\x15\x2a\xcc\x5e\x6c\x10\x91\xb5\x76\xaa\x74\x38\xf2\xa3\xa4\x05\x14\x91\x0e\xb2\xe4\x9b\x78\x73\xff\x98\xb9\x93\x60\xff\x96\x1c\x09\xd7\x14\xb7\x4a\x87\x23\x7f\x4a\x56\x40\x4f\xbe\xe5\x23\xaa\xe0\xd8\xfd\x03\xcb\xe7\x53\x3d\x39\x47\xc2\x8d\x4e\x42\x47\x52\x28\x49\x01\xfb\xca\x37\xe9\xab\xc3\x6f\x53\x3d\x19\xbe\x9f\x2b\xe1\xea\x78\xab\x74\x38\x0a\xa7\xe4\x04\xcc\x96\xef\xe8\xae\x60\xf2\xf9\xd4\xe4\x4a\xd8\x2c\x22\x8d\xf1\x54\xe9\x70\x44\x43\x49\xdd\x05\xf5\x7a\xb8\x64\xe4\x9b\x7c\x4b\xf8\x1c\x35\x93\x41\x15\x16\x36\x40\x4f\x0f\x2d\x22\x82\xaa\x6e\x8a\xbc\xd8\x74\x70\x16\xf8\x79\xc0\xd8\x57\xe2\x2c\xa4\x5c\x29\x19\x01\x3d\xf9\xee\x2d\x44\x3e\x9f\x79\x53\xcc\x6b\x96\x84\xaa\xaa\xad\x91\x14\x9a\x22\x54\xf5\x14\xf0\x75\xdb\x75\x94\x33\x15\x22\xb2\xde\x76\x11\xbe\x7c\x55\x95\xf0\xc8\xce\xc2\xe4\xf3\x99\x37\x05\xbe\xb7\x39\x73\x3a\xba\x49\x44\x56\x15\x9e\xd5\xe1\x88\x96\x0a\xe0\x3e\x11\xb9\xcf\x56\x01\xd9\xf2\x1d\xdd\x05\x53\xbe\x16\x5d\xee\xf9\x53\xfb\x49\xb8\x32\xba\xec\x0e\x47\xe1\xf8\x37\x61\xd6\xdb\x90\x50\x44\xb6\x92\x75\xe4\x8b\x52\x3e\x9f\xf9\x53\x61\x5f\x6b\x46\xc2\x56\x27\xa1\xa3\x94\xc8\xbe\x0b\x5a\x54\x09\x3d\xf9\xea\x7c\xf9\xa6\xc6\x78\x25\xb2\x60\x9a\x91\x50\x04\x30\x12\x36\xc4\xd7\x9a\xc3\x11\x9c\x8c\x80\xc5\x1c\x5d\x90\x2d\xdf\x91\x1d\xf1\xca\xe7\xd3\x47\xc2\xcd\x22\x52\x1f\x7f\xab\x0e\xc7\xd0\x64\x04\x2c\xd6\xe8\x82\xbe\xf2\x4d\xbb\x35\xae\x96\xfa\xb3\x70\x7a\x8e\x84\x6d\x4e\x42\x87\x6d\x32\x02\xce\x99\x68\x24\xac\xe8\x95\x30\xf2\x8e\xcd\x22\xb2\x05\x4f\xbe\x87\xb7\x17\x57\x3e\x9f\x85\xd3\xe1\xc1\x4d\x39\x12\xae\x28\x7e\x15\x0e\x87\x21\xa7\x27\xcc\x00\xa3\x0b\x22\xeb\x53\xe9\xc9\xb7\xc2\x97\x6f\xfa\x6d\x51\x65\x0e\xcf\xa2\x19\x39\x12\x6e\x71\x12\x3a\x6c\xd1\xaf\x2b\xda\xdc\x49\x39\x12\x46\xd2\xb1\x39\x5b\xbe\xc3\xdb\xec\xca\xe7\xb3\x68\x06\x3c\xd0\x92\x23\x61\x9d\xe5\x92\x1c\x65\xc8\x80\x3d\x61\xe6\x4e\x32\xdd\xb9\xe6\xd7\x43\x4f\x0f\x1b\xbd\x9e\x24\x2d\xf9\x34\x20\x22\x6d\xc0\x8a\xca\x0a\x23\xdf\x8c\x6f\x14\x54\x6f\xa4\xd4\xde\x61\xf6\x73\xe9\x1a\x50\x65\xab\xd7\x6d\xad\xdd\x76\x5d\xc5\x42\x44\x3e\x0a\x04\xfd\xe2\x79\x42\x55\x9f\x8c\xa9\x8e\xab\x80\x1b\x80\xd1\xde\xcf\x48\xe0\xef\xc0\x69\xe0\xa4\xaa\xfe\x2e\xa6\x76\x2f\x02\x82\x7e\xae\x7f\xab\xaa\x47\x87\xc8\x35\x12\x18\x0b\x8c\xc7\xec\xc3\xef\x81\x67\x54\xf5\x2f\x43\x25\x1d\xb4\x2b\x5a\xf5\x64\xf3\xea\x49\xd8\xec\x7d\x38\x43\x49\xe8\xc9\x57\x5f\x59\x01\x87\xb7\x97\x96\x7c\x3e\x8b\x67\x9a\xd7\x2c\x09\x55\x55\x3b\xec\x56\x55\x34\xae\x00\xee\x0e\x18\xfb\x16\x10\x99\x80\x22\x32\x06\x98\x07\x4c\x01\xc6\x0d\x13\xfb\x2a\xf0\x23\xe0\x90\xaa\x3e\x1f\x55\x0d\xc0\x28\x82\xef\xff\x28\xa0\x9f\x80\x22\x32\x11\x58\x03\x7c\x0a\xf3\xc5\xd1\xf7\xfd\x37\x31\xff\x6e\x75\xaa\xfa\x46\xdf\xf7\x87\x1c\x0d\x51\x5d\xc0\xe8\x82\xbe\xf2\xdd\x51\x82\xf2\xf9\x2c\x9e\x09\x7b\x9a\x33\xa7\xa3\xed\x22\x72\xaf\xe5\x92\x52\x8b\x88\x5c\x2a\x22\x9b\x81\x93\x98\xa3\xcf\x90\xf2\x79\x5c\x0d\x2c\x03\x9e\x15\x91\xa3\x22\x72\x5d\x9c\x35\x06\xc1\xdb\x8f\x83\xc0\x63\x98\xa3\x5e\x3f\xf9\x3c\x2e\xc7\x4c\x27\xf9\x82\x88\xcc\xec\xfb\xe6\xb0\xc3\x91\xfa\x0c\xf1\x69\x09\x22\x61\x92\xe4\xf3\x59\xd2\x5f\xc2\xe5\x96\x4b\x4a\x1d\x22\x72\x0b\x70\x0a\x68\x00\x3e\x90\x4f\x0a\x60\x06\xf0\xa2\xcd\x6b\x76\x11\x19\x0f\x9c\x00\xaa\x43\x6c\xf6\x61\xe0\x88\x88\x1c\x13\x91\xcc\x99\x67\xa0\xf1\x80\x35\x93\xe1\xa1\xb6\x1c\x09\x07\xed\xd8\xec\x7d\xbb\xd5\x57\x56\xc0\x0f\xb6\x25\x43\x3e\x9f\x25\x33\x61\xf7\xc6\x8c\x84\x1d\x22\xb2\xcc\x72\x49\xa9\x41\x44\xee\x02\x9e\xc0\x7c\x10\x0b\x65\x04\xb0\x55\x44\xf6\x8b\xc8\x05\x11\xe4\x0b\x8c\x88\x8c\x02\x8e\x00\x63\xf2\x4c\x31\x1d\xc8\xf8\x13\x78\x40\xee\xbc\x29\x39\x12\x0e\x38\xba\xc0\x93\xaf\xc1\x97\x6f\xe6\xed\x79\x96\x68\x91\xa5\xb3\x72\x24\xec\x74\x12\x16\x8e\x37\x3b\xc1\x0e\xa0\x32\xe2\xd4\xf3\x80\x1f\x8b\x48\x31\x07\x96\xb7\x02\x85\x9e\x02\xaf\x15\x91\x1b\x20\xe4\x88\xf8\x01\x86\xf8\x64\x3a\x36\x67\xcb\x77\xa8\x33\x99\xf2\xf9\x2c\x9d\x05\xdd\x1b\x72\x24\xbc\xc7\x72\x49\x89\x45\x44\x6e\x07\xe2\x9c\x2e\xf2\x56\xa0\x2d\xc6\xfc\x19\x44\xe4\xf3\xc0\x9d\x11\xa4\x1a\x01\x1c\x14\x91\x91\xa1\x07\xe4\xce\x9f\x6a\x5e\x17\xad\x84\x9e\x1e\x5a\xc5\x7c\x4a\x2f\x25\x4b\xbe\x59\xdf\x8c\xa0\x44\xcb\x7c\x6b\xb6\x79\xfd\xb6\xe9\x0f\xb4\xcd\xbb\x3b\xba\xc3\x62\x49\x89\x43\x44\xae\x01\x0e\x63\xae\xdd\xe2\xa4\x4e\x44\x9e\x56\xd5\x63\x31\xb7\xf3\x1d\xa2\xdb\x97\xb1\xc0\x17\xf3\x1a\x11\x3f\x7f\xaa\x79\x7e\x56\xbb\xca\x48\x08\xa6\x1f\xe9\xc1\x8e\x74\xc8\xe7\xf3\xea\xeb\x99\x5f\xdf\x07\x5e\x1f\x3c\xd2\x31\x08\x6d\xc0\x25\x45\x6a\xab\x53\x44\x1e\x57\xd5\x7f\xc7\xd8\xc6\xf8\x88\xf3\x8d\xcb\xfb\xdc\xd9\x1f\x5d\x50\x51\xd1\x2b\xdf\xec\x09\x51\xd6\x66\x97\x55\x5b\x61\xf3\x1e\xc0\xc8\x37\x4b\x55\x1f\xb5\x5b\x51\xb2\x10\x91\x9b\x30\x37\x1c\x8a\xc5\x18\xcc\xa3\x8a\xb8\xf8\x20\x70\x6d\xc4\x39\xc7\x17\x34\x27\xcc\x82\x69\x46\xc0\xaa\xca\x74\xc9\xd7\xd8\xee\xe4\x8b\x00\x1b\x73\xb3\xd6\x8b\x48\xbb\xaa\xfe\x37\x86\xdc\x41\x9e\x57\x86\xce\x59\xf0\xa4\x4c\xfe\x04\x48\x69\x61\x75\x07\xb4\xee\x06\x8c\x7c\xb3\x63\x96\xef\x16\x11\x79\x39\x60\xec\xe8\x18\xeb\x88\x14\x11\xb9\x18\x08\x31\xa1\x24\x00\xaf\x01\x7b\x80\xe7\x80\x77\x80\x4f\x03\xb3\x80\xcf\x86\xc8\x71\x09\x70\x33\xf0\xd3\x90\x6d\x07\xe1\x9a\xac\xdf\x9f\x05\x0e\x01\xcf\x63\x6e\xa8\x8c\x03\x16\x13\xfe\xee\xe8\xd5\x25\x33\x2b\x5a\x29\xb0\xba\x03\x36\x75\x03\xbd\xf2\x1d\x8f\xb9\xc9\x8b\x81\x4f\xc4\xdc\x86\x0d\x6e\x63\xf0\x9e\x21\x03\xf1\x28\x50\xab\xaa\x67\xb3\xfe\xf6\x6b\x11\xe9\x06\x56\x60\x6e\xfd\x07\xbd\xf9\x31\x89\x78\x04\xf4\x69\x05\xd6\xa9\x6a\xf6\x22\xac\x4f\x89\x48\x17\xe6\x51\xcb\xa2\x30\xc9\x4a\x6e\x62\x5e\x5b\xac\xe9\x2c\xba\x7c\x69\xe6\xcb\x21\x62\x4f\x00\x73\xfa\xc8\x07\x80\xaa\xf6\xa8\x6a\x1b\x70\x7f\x88\x7c\x5f\x09\x11\x1b\x96\xe3\xaa\xda\xd8\x47\x3e\x00\x54\xf5\x5f\x98\xa3\xe0\xaf\xc2\x24\x74\x02\x62\xe4\x6b\xe9\x02\x9c\x7c\x51\x11\xa6\x97\xc8\x5d\xaa\xfa\xde\x30\x31\x0d\xc0\x99\xa0\x6d\x8b\xf7\x6c\x2c\x62\xce\x03\xdf\x1d\x2a\x40\xcd\x7a\xef\x4b\xc2\x24\x2d\x7b\x01\xd7\xe6\xca\x37\xc7\xc9\x17\x09\x57\x06\x8c\x7b\x0f\xf8\xcd\x70\x41\xaa\xfa\x1f\x82\xaf\x65\x3f\x12\xb8\x2c\x60\x6c\x18\x5e\x50\xd5\x37\x87\x0b\x52\xd5\x93\x98\xa1\x54\x81\x28\xeb\x6b\xc0\xb5\x9d\xd0\x9c\x2b\x5f\xdc\x0f\x72\xcb\x85\xcb\x03\xc6\xbd\x14\xe2\x8e\xe5\x09\x20\xe8\xc4\x95\x57\x02\xc3\xca\x12\x92\x30\x63\x12\x57\x01\x1f\x0f\x12\x58\xb6\x02\xae\xdb\xe6\xe4\x8b\x91\xa0\x7d\x3e\x87\x3b\xf5\xcc\x26\xcc\xa3\x85\x38\x3e\xd7\x81\xdb\x57\xd5\xfd\x41\x63\xcb\xf2\x14\x74\xdd\x36\xd8\x68\x2e\xeb\xcf\xe3\xe4\x73\x58\xa4\xec\x04\xbc\x6f\x7b\x8e\x7c\xb3\x9d\x7c\x0e\x9b\x94\x95\x80\xeb\x77\xc0\x86\x5d\x80\x3b\xf2\x39\x4a\x84\xb2\xb9\x06\x5c\xbf\x03\x9a\x76\x02\xbd\xf2\x0d\x3a\xc1\x4e\x11\x39\x07\xfc\x2d\x60\xec\x68\x8a\xd7\xb1\xb9\x58\x5c\x28\x22\xd7\x07\x8c\x8d\x62\x20\x6f\xc9\x51\x16\x02\x36\xed\x2c\x49\xf9\x00\x9e\x54\xd5\x69\x41\x02\x45\xe4\x10\x66\x6e\x91\x34\x31\x16\x78\xc9\x76\x11\x36\x49\xfd\x29\x68\xd3\x4e\x73\xf4\xa3\xf4\xe4\x73\x38\xd2\x2d\xe0\x86\x5d\x39\xf2\xcd\x75\xf2\x39\x4a\x8d\xd4\x0a\xb8\x61\x97\xb9\xe3\x49\xaf\x7c\x8f\xd8\xad\xc8\xe1\xe8\x4f\x2a\x05\xdc\x78\xbf\x93\xcf\x91\x0c\x52\x27\x60\x73\x97\x79\xd0\x8e\x93\xcf\x91\x00\x52\x25\x60\x73\x97\xe9\xdf\x89\x91\xaf\xda\xc9\xe7\x28\x75\x52\x23\x60\x4b\x7f\xf9\x8e\xd8\xad\xc8\xe1\x18\x9e\x54\x08\xd8\xd2\x65\xc6\xf4\xe1\xe4\x73\x24\x8c\xc4\x0b\xb8\xa9\xdb\xc9\xe7\x48\x2e\x89\xee\x09\xb3\xa9\xdb\xcc\xe3\x82\x91\xaf\xc6\xc9\x97\x38\xde\x00\xe2\xb8\x4e\x8f\x7a\x2c\x60\x6c\x24\x56\xc0\xd6\xdd\xfd\xe4\x7b\xd8\x6e\x45\x8e\x3c\x78\x4d\x55\xcb\x7a\xda\xff\x44\x9e\x82\xb6\xee\x36\x73\x77\xe2\xe4\x73\x24\x9c\xc4\x09\xb8\x79\x8f\x93\xcf\x91\x1e\x12\x25\x60\xdb\x5e\x33\x65\x3c\xd0\x83\x93\xcf\x91\x02\x12\x75\x0d\x38\xaa\x77\x4d\x55\x21\x7d\x63\xe3\x1c\x43\x20\x22\x17\x02\x17\x06\x0c\x3f\xa7\xaa\xe7\xe3\xac\x27\x2a\x12\x25\xe0\x9d\x35\x70\xfe\x3c\x2c\x6b\x46\x80\x6e\x11\x41\x55\xf7\xd8\xae\xcb\xd1\x8f\xb7\x81\x8f\x04\x88\xbb\x2a\x44\xce\xbd\x40\x4d\xc0\xd8\x6b\x81\x3f\x85\xc8\x6d\x8d\x44\x9d\x82\x02\xdc\xb3\x00\x3a\x57\x03\x64\x24\x5c\x6a\xb7\x22\xc7\x00\x04\x9d\x17\xf3\x0a\x11\xf9\x58\xc0\xd8\xcf\x84\x68\x3f\xe8\x2c\x03\xd6\x49\x9c\x80\x00\xcb\x16\xe6\x48\xb8\xdb\x49\x58\x72\x9c\x0e\x11\x3b\xec\x8a\xb3\x22\xf2\x25\xe0\x93\x01\xf3\x9d\x51\xd5\x77\x43\xb4\x6f\x95\x44\x0a\x08\x46\xc2\x8e\x46\xa0\x57\xc2\x50\x53\x82\x3b\x62\xe5\x85\x10\xb1\xcb\x45\xe4\x0b\x83\xbd\x29\x22\x97\x03\xfb\x09\xbe\x38\xcb\x89\x10\x6d\x5b\x27\xb1\x02\x02\x2c\x5f\x04\xed\xab\x00\xf3\x9f\xb3\xc7\x49\x58\x32\xfc\x24\x44\x6c\x25\xf0\x0b\x11\x59\x27\x22\x17\xf9\x7f\x14\x91\x2a\x11\x99\x81\x11\x2a\xcc\xb5\x62\x98\xb6\xad\x93\x68\x01\x01\xee\xad\x75\x12\x96\x1a\xaa\x7a\x02\x78\x25\xc4\x26\x55\x40\x13\xf0\xb6\x88\xbc\x24\x22\x4f\x63\xd6\x08\x3c\x4a\xf8\x75\x1e\x1e\x0b\x19\x6f\x95\xc4\x0b\x08\x46\xc2\xad\x2b\x81\x5e\x09\x17\xdb\xad\xc8\x01\xec\xcb\x63\x9b\x0a\xe0\x7a\xcc\x5a\xec\x17\xe4\xb1\xfd\x53\xaa\xfa\xe7\x3c\xb6\xb3\x46\x2a\x04\x04\xa8\x5b\x9c\x23\xe1\x5e\x27\xa1\x75\x76\x00\x7f\x2d\x62\x7b\x0a\xd4\x17\xb1\xbd\x48\x48\x8d\x80\x60\x24\xdc\x92\x2b\x61\xad\xdd\x8a\xca\x17\x6f\x49\xb1\xd5\x45\x6c\xf2\xb0\xaa\x3e\x57\xc4\xf6\x22\x21\x55\x02\x02\xac\xc8\x95\xf0\x01\x27\xa1\x3d\x54\xf5\x20\x50\x8c\xf5\x16\x4f\x01\x77\x15\xa1\x9d\xc8\x49\x9d\x80\x60\x24\x6c\x6b\x00\x7a\x25\x0c\xb5\x6e\xb7\x23\x52\x16\x00\x7f\x88\x31\xff\x39\x60\xa2\xaa\xfe\x23\xc6\x36\x62\x23\x95\x02\x02\xd4\x2f\xc9\x91\xf0\x41\x27\xa1\x1d\xbc\xb5\xd3\x27\x10\xcf\x14\xf4\xff\x04\x26\xa9\xea\x8b\x31\xe4\x2e\x0a\xa9\x15\x10\x8c\x84\x9b\xcd\x65\xb9\x2f\xe1\x42\xbb\x15\x95\x27\xaa\xfa\x2a\x70\x13\xf0\x78\x84\x69\x5f\x06\x6e\x54\xd5\x5f\x46\x98\xb3\xe8\xa4\x5a\x40\x80\x86\xa5\x39\x12\xee\x73\x12\xda\x41\x55\xdf\x06\x26\x02\x77\x03\x67\x0a\x48\xf5\x3f\xcc\x1d\xd6\x1b\x55\xf5\x8f\x51\xd4\x66\x93\xcc\x68\x08\xb9\xd6\x66\x19\x45\xc3\x97\x10\x55\x7d\xc8\x76\x31\xe5\x86\xaa\xf6\x00\x3b\x45\xe4\x00\xd0\x08\xd4\x02\x1f\x0a\xb8\xf9\xbb\x98\x87\xec\x6b\x54\x35\xcc\x43\xfe\x92\x26\x51\xc3\x91\x22\xc2\x49\x68\x19\x55\x3d\x0b\x34\x88\x48\x23\xf0\x39\xcc\x91\xf1\x06\xcc\x1a\x88\xa3\x81\x91\x98\x11\x15\xa7\x81\x93\x98\x53\xd7\x9f\xa9\xea\x3b\x76\x2a\x8e\x8f\xff\x03\xb3\xac\x59\x73\x6f\x31\x3a\xc3\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x1f\x4e\x86\xac\x4d\x0b\x00\x00")

func static_images_logo_large_png_bytes() ([]byte, error) {
	return bindata_read(
		_static_images_logo_large_png,
		"static/images/logo-large.png",
	)
}

func static_images_logo_large_png() (*asset, error) {
	bytes, err := static_images_logo_large_png_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static/images/logo-large.png", size: 2893, mode: os.FileMode(420), modTime: time.Unix(1420874047, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _static_images_logo_small_png = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x00\xd9\x04\x26\xfb\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x4c\x00\x00\x00\x1a\x08\x06\x00\x00\x00\x1d\x40\xba\xc1\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xda\x00\x00\x0d\xda\x01\x4b\x18\xf6\xeb\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x04\x56\x49\x44\x41\x54\x58\x85\xd5\x99\x5b\x88\x55\x55\x18\xc7\x7f\xff\x93\x33\xce\x9c\xbd\x77\xd9\x45\x1f\x22\x91\xca\xa4\x5e\x92\x42\xe7\x92\xce\x35\x52\x83\x50\x8a\xc0\x7a\x50\xf0\xa1\x89\x10\xca\xb7\x5e\x26\x82\xf0\xc5\x82\x22\x94\xa2\xf1\x12\x45\xa4\x3d\x28\x38\x37\x2f\x89\x17\x72\x9a\x82\x20\xec\x02\x43\x64\x51\xf3\xd0\x44\x0f\x62\x73\x31\x47\x9d\xaf\x87\xb3\xcf\xb8\xce\xee\xdc\xf7\x39\x36\xfe\xe1\x83\xbd\xd6\xf7\xed\x6f\xad\xf3\x9b\xbd\xae\x23\x33\xa3\x1c\x49\xea\xa8\xad\xe1\xe0\xf4\x15\xd6\x9b\xd9\xd9\x12\xdf\x7d\x1a\x58\x12\x16\x2f\x9a\xd9\x87\x8e\x6f\x35\xb0\xc2\x09\x7f\xcf\xcc\xa6\x43\xdf\x52\xe0\x29\xc7\x77\xd0\xcc\x46\xcb\xfa\x01\xe5\xca\xcc\x4a\x36\xa0\xc3\xf7\x98\x7c\xa7\x1b\xf3\x3d\xfe\x06\x56\x95\xf8\xfe\x31\xc0\x42\xfb\x25\xe2\xdb\xe1\xf8\x0c\xb8\xd5\xf1\x3d\x1b\xf1\x3d\x5e\x4e\xff\xe3\x58\xa2\x54\xc0\x92\xda\x03\x8f\xbe\x23\xfb\x48\x6e\xdb\x02\x83\x7b\x09\x7c\x8f\x23\x92\x56\xc5\xfd\xe3\xdd\x0c\x2a\x09\x58\x08\xab\x7f\x70\x1f\xde\xea\x70\xd0\xb4\xac\xcc\x80\xf6\x58\x35\x3a\x39\x97\x94\x90\xd4\x56\x4c\xa0\xa4\x36\x3f\x02\x2b\xad\x96\x95\x30\xb0\x87\xc0\xf7\x38\x5a\x65\x68\xc7\x80\x87\x1c\x1b\xae\x62\x5b\x59\x95\x48\x88\xc1\x70\xa2\xcd\x29\x49\xad\xbe\xc7\xc0\x91\x2c\xb0\xd2\x6a\x6d\xc8\x80\xd6\x5c\x8d\xce\x9a\xd9\xb8\x99\x8d\x38\x36\x55\x8d\x76\xf2\x29\x31\x63\x24\x83\xd4\x70\xca\x0a\x4d\x52\x6b\x50\x00\x56\x5a\xad\x0d\xd0\xbf\x9b\xc0\xf7\x38\x26\xa9\xa9\x1a\x1d\xfe\xbf\x95\x00\x18\xd8\x8b\x9f\x0d\x9a\xa4\x96\xc0\x63\x60\x70\x1f\x7e\x21\x58\x69\xb5\x35\x42\x5f\x0a\xda\xf1\x4a\x43\x93\xb4\x50\x52\xbb\x63\x0b\x0a\xc4\xdf\x2d\xe9\x61\x49\xf3\x0a\xc4\x3d\xe2\xe4\x5c\xe1\xd4\xdf\x21\xe9\x51\x49\x49\x37\xde\xec\x3c\x76\x66\x3f\xe6\x27\x99\x00\x56\x87\x4b\x78\x4b\xe0\x31\xfe\xc5\x67\x29\x7f\xa9\x76\xea\xd3\xd9\x2d\x47\xe3\x8d\xde\x56\x00\x5d\xc0\xa8\x13\x37\x05\x1c\x00\x16\xe5\x88\x1f\x72\x62\xbf\x03\x7c\xe0\x63\xa7\xee\x32\xf0\x1a\xa0\xd9\x55\xb2\xb5\x01\xfa\xf6\xe0\xf9\x49\x8e\x4a\xda\x16\x78\x0c\x96\xf2\x65\x45\xd5\xde\x08\xbd\x3d\x04\xbe\xc7\xe7\x92\x1a\xcb\xcb\x52\xba\x24\x1d\x00\x3e\x00\xee\x71\xaa\xeb\x81\x8d\xc0\x8f\x92\x1e\x2c\x22\xcd\x4e\x60\x93\x53\xae\x05\xde\x00\xb6\x66\x6c\x2b\xda\x1b\xa1\x77\x37\xde\xed\xb7\xf1\x66\x1c\x58\x69\x75\x34\x41\xf7\x56\x82\xf9\xb5\x1c\x96\x54\x17\x2f\x5b\x61\x49\xda\x42\x0a\x4c\x2e\xdd\x05\x7c\x24\xe9\x96\x3c\x31\x49\x60\x73\x0e\xdf\xd6\xff\x8c\xed\x8e\x26\x18\x3d\x4b\x8d\x97\xcc\x16\x5f\x9a\x4e\x0e\xc3\xf6\x5d\x8c\x5f\x9e\x66\x83\x99\xfd\x93\x23\x6c\x51\xf8\x55\xa4\xb5\x3c\x46\x93\xaf\x3a\xcf\xd7\x80\xfd\xc0\x08\xf0\x22\xb0\x38\xac\x6f\x00\x3a\x80\x13\x39\x72\xdc\x0b\xfc\x40\x6a\x48\xae\x09\x2d\xad\x65\x59\x27\xc3\x4a\xc1\xda\xd0\xc5\xf8\xc4\x14\x4f\x98\xd9\xd7\x79\x42\x3d\xf2\x7f\x15\x45\x49\x92\x0f\x3c\xe0\x54\xf5\x99\xd9\xa6\xd0\x37\x04\x9c\x72\x7c\x0d\xe4\x06\x36\x03\xac\x35\xb3\x31\x49\x6f\x93\x02\xbe\x2c\xf4\x25\xf2\xae\x1e\xe5\xca\x81\xb5\xa6\x00\xac\x4a\x6a\x31\x99\x27\x97\x59\x40\x66\x76\x5a\xd2\x55\x20\xfd\x7b\xef\xcb\x93\x67\xc4\xcc\xc6\xc2\xf7\x2c\xdc\xd8\xcf\xae\xc6\x15\x07\xe6\xc0\x5a\x6b\x66\x5f\x15\xf1\xca\x0c\x30\xee\x94\xeb\x80\xf9\x65\x34\xad\x48\xb9\x2e\xb2\xed\xb0\x3c\xb1\xae\x32\xae\x6f\x42\x78\x63\xe9\x72\xc9\x87\xef\x7c\x3a\x39\x0c\xeb\xbb\x98\x08\x61\x15\x7b\x6c\xf9\xcd\xcc\x16\xa4\x0d\x78\xb7\x42\xdd\xd9\x01\x5c\x70\xac\xa6\x12\x49\x2b\x06\x2c\x0d\x6b\xb2\x34\x58\x37\x9d\x2a\x02\x2c\x02\xeb\xcb\x4a\xe4\x9c\xab\x8a\x3d\x87\x39\xb0\xd6\xcd\x31\x58\xa7\x81\x73\x39\x7c\xc5\xcc\xad\x59\x15\x0b\xd8\xc9\x61\x58\xff\x02\x13\x93\x97\x58\x67\x66\x43\x71\x72\x55\x41\x87\xcc\x6c\x67\xa5\x93\x96\x0d\x6c\x62\x0a\x9e\x79\x89\xe9\xc9\x4b\x74\xcf\x11\x58\x93\x91\xf2\xc2\xf4\x83\xa4\x3b\x81\x5d\x5c\x5f\x1d\xfb\xcd\xec\x93\x72\x1a\x29\x7b\x0e\xf3\x93\x70\xe8\x7d\x6a\xbd\x7a\xb6\xcf\x91\xeb\xe9\xdf\x81\x8b\x4e\x79\xb3\xa4\xa5\x92\xea\x49\x1d\x9c\x9f\x23\xb5\x41\xde\x48\x8c\x0f\x25\xd6\xa4\xdf\xd9\x0c\xbd\xbb\xf1\xbd\x64\xf5\x2e\x0d\x8b\x95\xa5\xae\x1d\xdc\xdd\xfc\x12\xe0\x27\xe0\x4f\xe0\x15\xa7\x7e\x1a\x38\x53\x6e\x3b\xb1\x57\xc9\xce\x66\xe8\xed\xc1\xf7\x93\x73\xe2\xd2\xf0\x65\x32\xbf\x32\x01\x41\x24\xe6\x75\x33\xfb\xb5\xdc\x06\x2a\xb2\xad\xe8\x6c\x86\xc3\x3d\x04\x7e\x92\xe3\x37\xf2\x2a\x27\xaa\xf0\x7f\x94\x4f\x02\x3f\x67\x71\x5f\x25\x75\x45\xf3\x56\x9c\x36\xe6\x01\xe8\xfe\x38\x29\x32\x14\x24\xc4\x09\x49\x85\xf6\x63\xe7\xb8\x7e\xfc\xf9\x23\xe2\x3b\x4f\xe6\x90\xb9\xe6\x3c\xff\x15\xf1\x5d\x88\x26\x36\xb3\x61\x49\xcb\x81\xe7\x81\x46\x52\x57\x3a\xdf\x90\x3a\x8c\x7f\x9f\xa3\x3f\xdf\x02\x57\x9c\xf6\x73\xea\x5f\x12\xa6\x94\xed\x89\x2c\x63\xa4\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\xd6\xaa\x0f\xeb\xd9\x04\x00\x00")

func static_images_logo_small_png_bytes() ([]byte, error) {
	return bindata_read(
		_static_images_logo_small_png,
		"static/images/logo-small.png",
	)
}

func static_images_logo_small_png() (*asset, error) {
	bytes, err := static_images_logo_small_png_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static/images/logo-small.png", size: 1241, mode: os.FileMode(420), modTime: time.Unix(1420874047, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _static_js_hier_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x4d\x6b\xeb\x30\x10\x3c\xc7\xbf\x42\x4f\x27\x19\x82\xfe\x80\xf0\xe1\xf1\x08\xe4\x90\x77\xcb\xad\x94\xa2\xd8\x6b\x22\xaa\xae\x8d\xb4\x0a\x0d\xc1\xff\xbd\xfa\x70\x6c\x17\x4a\x73\x90\x94\xdd\x9d\xd9\x99\xb1\xe9\x99\xa0\xfb\x08\x43\xcf\x8e\x06\x1c\x6b\x9a\x86\xf1\x80\x1d\xf4\x06\xa1\xe3\xf5\x5c\x65\x8f\x49\x55\x55\x7a\x4b\x7f\xc7\xf6\xcd\x81\x1f\x6c\x20\x33\xa0\x8f\xcd\x3e\x60\x9b\xde\xc2\x93\xa6\xe0\xf7\x6c\x6d\xd7\xec\x51\xb1\xf8\xbb\x69\xc7\xae\xa6\xcb\x5c\x18\xac\x55\xb9\xda\x0f\x8e\x89\x67\x79\x05\xa9\x79\xf4\x4f\x33\x0f\x2f\xd0\x7c\xcb\x51\x3b\x40\x3a\x58\xf8\x88\x57\xda\xb0\x4b\x36\x4a\xaf\xb5\xda\xfb\x93\xf1\x24\xdb\x01\x49\x1b\xf4\x82\xe7\x0e\xaf\xf3\x64\x5a\x7b\x71\xa0\xdf\x55\xb5\x9b\xb2\x88\x72\x2e\x0c\x6c\x5e\x5a\x57\x3b\x07\x14\x1c\xaa\xc5\x80\x0f\x97\xe2\x10\x92\xeb\x92\xc6\xfc\xff\xa5\x3c\xe4\x4d\xdb\x00\xaf\x6a\xa1\xdc\x96\x4b\xb8\x3c\xcb\x28\x62\xe3\xd9\x01\x46\x2e\x72\x01\x0a\x68\x62\x60\x3d\x14\xec\xba\xee\x27\x4c\xaf\xe3\xa0\x4a\x2a\x9f\xb9\x49\x83\x08\xee\x78\xfe\x7f\x62\x69\x51\xec\x6d\x28\x64\x0c\xfb\xa0\xdb\xab\xd8\x7c\xad\x25\x91\xe4\x0e\x6c\x44\x75\x43\x1b\x52\xaa\xb2\x8d\x19\x11\xcc\x19\x0b\x3e\x8c\x09\xc2\x6b\x55\xe6\xc1\x4a\x0f\xf4\x97\xc8\x99\x4b\x20\x10\x3c\x1b\xe4\x7b\x16\x39\xd7\x91\x2c\xe7\x0c\x9f\x14\x89\x3d\xcd\xf5\x8d\x5c\x3d\x8e\x80\xdd\xbf\xab\xb1\x9d\x00\x9b\x80\x53\xfd\x2d\x85\x5f\x83\xaa\xa6\xea\x2b\x00\x00\xff\xff\x13\x21\xd7\x26\xbe\x02\x00\x00")

func static_js_hier_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_js_hier_js,
		"static/js/hier.js",
	)
}

func static_js_hier_js() (*asset, error) {
	bytes, err := static_js_hier_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static/js/hier.js", size: 702, mode: os.FileMode(420), modTime: time.Unix(1420869310, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_footer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x00\x03\x1b\xfd\x94\xcc\x32\x3b\x2e\x14\xa6\x8d\x7e\x52\x7e\x4a\xa5\x1d\x97\x8d\x7e\x46\x49\x6e\x8e\x1d\x17\x20\x00\x00\xff\xff\x49\xe2\x32\x7f\x2a\x00\x00\x00")

func templates_footer_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_footer_html,
		"templates/footer.html",
	)
}

func templates_footer_html() (*asset, error) {
	bytes, err := templates_footer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/footer.html", size: 42, mode: os.FileMode(420), modTime: time.Unix(1420876452, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_header_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x52\x4d\x8b\xdb\x40\x0c\x3d\x77\x7f\x85\xd6\x50\x7a\x72\x66\x3f\x60\x0f\xcb\xd8\x97\x76\x61\x7b\x6a\x29\x81\x52\x4a\x0f\x8a\xad\x78\x26\x19\x8f\xcd\x8c\xea\xd4\x5d\xf6\xbf\x57\x13\xc7\xcd\xa6\xe9\xa5\x50\x30\x96\x90\x1e\x4f\xef\x49\xa3\x2f\xdf\x7d\x78\xbb\xfc\xf2\xf1\x01\x0c\xb7\xae\xbc\xd0\x53\x00\xd0\x86\xb0\x4e\x89\xa4\x6c\xd9\x51\xf9\xf8\xfe\xe1\x13\xdc\xdf\xc3\xd3\xd3\x62\x99\x0a\xcf\xcf\x5a\x4d\x9d\x09\xe5\xac\xdf\x42\x20\x57\x64\x91\x47\x47\xd1\x10\x71\x06\x3c\xf6\x54\x64\x4c\x3f\x58\x55\x31\x66\x60\x02\xad\x8b\x4c\x45\x46\xb6\x55\x2a\xa9\x58\x05\x22\xbf\x48\xdd\x33\x26\x5b\x75\x7e\xe6\xb0\x2d\x36\xa4\x7a\xdf\xfc\x49\xb2\x6f\x44\xb5\xc6\x21\xc1\xf3\xeb\xbb\xc5\x1e\x14\xed\x4f\x8a\x45\x76\x7d\xf7\x7f\x68\x6f\x6f\x4e\x68\x6f\x6f\x66\x5a\xd1\x6f\x7b\x7e\x69\x74\x83\x03\x4e\x55\x81\x87\xea\x48\xb9\x89\xca\x58\x0a\x8b\x8d\x58\xd5\x6a\x82\x1c\x58\x2e\xf3\x1c\x96\xc6\x46\x90\xaf\x1e\x3d\xb6\xb6\x42\xe7\x46\x68\xc8\x53\x40\xa6\x1a\xb8\x03\x83\x03\x01\x1b\x12\x17\x7d\xf7\x26\x82\xe8\x5a\xdb\xe6\xbb\xf4\x6d\xe7\x21\xcf\xff\x41\x91\x48\xa9\x91\xf1\x4c\x8a\x56\xf3\xe1\xf5\xaa\xab\xc7\x03\x63\x6d\x07\xa8\x1c\x46\x31\xee\xba\xa6\x3b\x58\x97\x86\x6d\x9b\x53\x8b\x87\xad\x25\x54\x1e\x5b\xb1\x30\x6d\x0d\x1d\x17\xd9\xd7\x47\x31\xff\x6d\xde\x9b\x12\xd2\x73\xfa\x34\x34\xdf\x05\xec\x7b\x0a\xc7\x31\x2f\x00\x49\x1e\x05\xf0\x38\xac\x30\x21\x5e\x69\xc6\x95\x23\xd8\xd9\x9a\x8d\x9c\xfb\xea\xea\x75\xaa\xa6\x67\x1b\xf6\x31\x65\x75\xa9\x71\x3e\xaf\xa8\xdc\xca\xcb\x2c\x97\xfb\x18\xb5\x42\x59\x80\x20\xfe\x86\xdd\xd9\xad\xcd\xca\xcf\xf2\x3f\x81\x49\x92\xb8\x25\xa4\xd1\xbf\x55\x1e\x1d\x9d\x4a\x96\x33\x31\x79\x4e\xb2\x2e\x7e\x05\x00\x00\xff\xff\x4f\xa5\xb4\x60\x71\x03\x00\x00")

func templates_header_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_header_html,
		"templates/header.html",
	)
}

func templates_header_html() (*asset, error) {
	bytes, err := templates_header_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/header.html", size: 881, mode: os.FileMode(420), modTime: time.Unix(1420879473, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_new_ticket_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x53\xc1\x8e\xd3\x30\x10\xbd\xe7\x2b\x46\xd6\x1e\x40\xda\xc6\xe2\x8a\x1c\x5f\xf6\xc2\x05\x81\xe8\x1e\x91\x90\x9b\xcc\x36\x16\x8e\x53\xc5\x13\x96\x2a\xca\xbf\x33\x8e\x93\xb4\x48\x04\x4a\x7b\xc8\x4c\x33\xef\xf9\xcd\xbc\x78\x86\xe1\xd5\x52\x0d\xf9\x53\xeb\x5f\xec\x71\x1c\xbf\x66\xaa\x7e\xa7\x9f\x3a\x34\x84\x60\xc0\xe3\x2b\x90\x2d\xbf\x23\x29\xc9\xef\x33\xf5\xd2\x76\x0d\x98\x92\x6c\xeb\x0b\x21\x53\x49\x32\x4a\x40\x83\x54\xb7\x55\x21\x3e\x7f\xda\x3f\x0b\x9d\x01\x28\x32\x07\x87\x31\x8b\x79\x97\x92\x98\xd6\x5a\x39\x73\x40\x07\x7c\x58\x21\xc8\x92\x43\xa1\x9f\x63\x50\x72\x2a\x68\x25\x19\xb4\xe2\x2b\xad\xac\x3f\xf5\x04\x74\x3e\x21\x13\xf0\x27\x09\xf0\xa6\xc1\x95\xcc\xf8\x6a\x16\x92\x8b\xd2\xdf\x24\xf9\x1c\x56\xe4\xe7\xa6\x60\x40\x87\x25\x2d\x2a\x13\x3e\x1b\x86\xce\xf8\x23\x42\x1e\x99\x21\x7a\x05\xf3\x4f\xb5\xa7\xe8\x08\xfc\x30\xae\x67\xfc\x30\xe4\xe3\x28\xf4\x14\x94\x4c\xb5\x48\x47\x5f\x5d\x58\x4a\x26\x8d\xff\x6d\x3e\x90\xa1\x3e\x08\xbd\x9f\xe2\x6d\x03\xcc\x1c\x68\x7d\x59\xc7\x11\x0a\xf1\xc1\x62\x97\x87\xb3\x2f\xbf\x75\x18\x5a\xd7\xc7\x16\xc3\x1b\xaa\x6d\x78\x84\xf8\xcc\xe3\x87\xce\x43\x7f\x48\xd4\xb7\x42\x6f\x0d\x2b\xf4\x6e\xb7\xbb\x9e\x32\x99\xf4\x10\x95\x1f\xe1\x61\x3d\x02\xde\x17\x90\xa7\xa6\xff\x61\xde\x44\x4d\x06\xce\xe9\xdd\x26\x42\xe9\x4c\x08\x85\xa8\x6d\x85\x9d\x00\x0e\x15\xfa\x4d\x67\x97\x56\x85\xfe\xb2\x9a\x72\xa3\xc1\x17\xea\xbd\xdf\xb5\xc1\x10\xcc\x91\xef\xd9\xc7\x94\x6c\x0a\xc7\xfb\x6f\x78\x41\x67\xe9\x95\xc7\xc0\xb9\xf2\x07\x69\x8e\xcb\x36\xfe\xb6\x4c\xdc\x78\x63\x79\x9d\x66\xf3\xf7\xe9\x2f\x2f\xba\x8c\x17\xe0\xca\xef\x5f\x01\x00\x00\xff\xff\x77\xeb\xef\x25\x29\x04\x00\x00")

func templates_new_ticket_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_new_ticket_html,
		"templates/new_ticket.html",
	)
}

func templates_new_ticket_html() (*asset, error) {
	bytes, err := templates_new_ticket_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/new_ticket.html", size: 1065, mode: os.FileMode(420), modTime: time.Unix(1420880137, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_ticket_list_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\xb1\x72\x86\x20\x10\x84\x7b\x9f\x82\xa1\x48\x29\x0f\x10\xa4\x4a\x91\xb4\x49\x4a\x9b\x8b\x9c\x91\x09\x42\x46\xce\x8a\xe1\xdd\x73\xea\xa8\x43\xfe\xea\xd8\x5d\xe6\xbb\x05\x4d\xf0\xe5\xd1\x34\x42\x68\x5a\xb6\xb1\x1d\x26\xf3\xf6\xa2\x15\x8f\x4b\x7f\x3a\xf2\x58\x5b\x1f\x04\xb4\xa6\xda\x7b\xc7\x14\xfd\x4a\x2e\x86\xd3\xe7\xc9\xd8\x9c\x17\x08\xdf\x28\xda\x52\xfa\x7a\x95\x35\x1a\xc4\xb4\xe0\xd8\x49\x45\x6e\xf8\x41\x52\x39\xb7\xaf\x90\xa6\x52\xa4\x18\x3c\xa4\xd4\xc9\x39\x86\x98\x7e\x61\x40\x69\xae\x50\x2b\x30\x0c\xb7\x37\x88\xa3\xbd\xe6\x96\xfd\xf3\x8f\xae\x8f\x81\x1b\x45\x7b\x77\x2e\x85\xaf\xd6\x12\x7d\x62\xde\xd3\x6c\x79\xe7\x33\xcb\x60\x6f\xc8\xf9\xb4\xdd\xec\x1b\x96\xc7\x57\xfe\x05\x00\x00\xff\xff\x83\x82\x7b\x26\x53\x01\x00\x00")

func templates_ticket_list_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_ticket_list_html,
		"templates/ticket_list.html",
	)
}

func templates_ticket_list_html() (*asset, error) {
	bytes, err := templates_ticket_list_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/ticket_list.html", size: 339, mode: os.FileMode(420), modTime: time.Unix(1420869651, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_view_ticket_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x54\x51\x6b\xdb\x30\x10\x7e\xf7\xaf\xb8\x89\x3e\x6c\x50\xdb\x8c\xed\xa9\xc8\x86\xb2\x0e\xf6\xb2\x75\xac\x79\x2c\x0c\xc5\xbe\xc4\xa2\xb6\x14\x24\xb9\x59\x11\xfe\xef\x3b\x49\x4e\x9c\xb6\x69\x21\x58\xa7\xd3\x7d\xdf\xdd\x7d\x3a\xc5\xfb\xbd\x74\x1d\x14\x2b\xd9\x3c\xa0\x9b\xa6\x8c\x3b\xb1\xee\xb1\xce\x00\xb8\x33\x61\x09\x46\x57\xaf\xa4\xeb\x91\x97\x64\xcd\xae\x16\x1a\xdd\xdb\x9d\x50\xd5\x97\xda\xfb\x22\x9e\x4f\x13\x45\xb4\x11\x5b\x26\xf0\x73\x8e\xa7\xdd\x73\x8a\x08\x24\xe7\x82\x4b\x81\x77\x4e\xb8\xd1\xbe\x0a\x4d\xee\x97\x49\xe8\x9b\x2a\xf6\xde\x08\xb5\x45\x28\xae\x8d\x93\x1b\xd1\x38\x0a\xbd\xcf\x78\x2b\x1f\xa1\xe9\x85\xb5\x15\x6b\xf4\x30\xa0\x72\x2c\x82\x4f\xfc\x1d\x8a\x16\x0d\x9b\x93\x85\xa6\x0e\x27\x4a\x0c\xc8\x42\xee\xeb\xd1\x75\xda\x14\xbf\x68\x1f\x0a\x08\x31\x67\xc2\x71\x10\xb2\x67\x35\x17\xd0\x19\xdc\x54\x2c\x6c\x9d\xbe\x5a\xf0\xdf\x83\x67\x9a\x4e\x29\x67\x17\x2f\x45\xfd\x26\x6f\x2b\x5c\x2a\xe3\x86\x8c\xd3\xfc\xbc\xa4\x36\x5e\xb6\xb3\xd1\x66\x10\xce\x61\xb8\x22\xe5\x62\xc3\xde\x0f\xc2\x3c\xb4\x7a\xaf\xa0\xf8\x89\xd6\x8a\x6d\xa4\x89\xe0\x79\xf1\x1e\x55\x4b\x03\x70\x58\x33\xde\x7d\xae\xaf\xdb\x40\x12\x55\xe3\x25\xed\x33\x1e\xc8\x61\x40\x2a\xbd\xad\xd8\xef\xdb\xbb\x15\xc9\x76\x76\x66\x96\x01\xf9\x9a\x5c\xc1\x89\xff\x9c\x30\x28\x20\xe8\x4a\xf2\xa4\x4a\x48\xb0\xf2\x70\x32\xa3\xdf\x1b\xa3\x73\xd3\xc1\x2d\xf6\xd8\xb8\x99\xd7\xc6\x08\x06\x5a\x35\x5d\x18\x89\x8a\xfd\x90\x68\x0a\xfb\xa4\x9a\xbf\x06\xad\xee\x47\x27\xb5\xb2\x1f\x5d\x27\xed\x25\x84\x6f\x11\xda\x2a\xec\xb8\x4e\xd0\x4f\xec\x58\xb2\xde\x85\x58\x78\x14\xfd\x48\x3c\xac\xce\xf3\x9c\x97\xc9\xb9\x8c\xdc\x45\xc8\x7b\x09\x17\x47\x02\xb8\xaa\xa0\xf8\xa6\xd5\x46\x6e\xe7\xb1\xc5\x38\x8d\x67\x49\xbd\x8f\xf8\x34\x16\xb3\x79\x9a\x23\xde\xc7\xfd\x2c\x4c\x6a\xb4\x7e\xa5\xd0\x87\x3c\x87\xd5\xed\xcd\xed\x15\x50\xce\xd1\x20\xe8\xd1\x41\xa7\xf7\xe0\x34\xec\xc8\x0c\x5d\x92\x20\xf4\x43\xe8\x25\x7d\xf2\x7c\x56\xf6\xf8\x0a\x64\x78\x04\x40\x4b\x8b\x6a\x91\x9b\xf7\x62\x8d\x3d\x90\x40\x24\xec\xa1\x3f\x56\xff\x39\xea\xc8\xcb\x18\x51\xbf\x7b\x23\x0b\xf0\x8d\x16\x8e\xcf\x98\x4b\x15\xeb\xa5\xff\x85\x88\x1b\xa4\x63\x07\xa5\xee\xd2\x36\x44\x87\x0b\xab\xb3\xff\x01\x00\x00\xff\xff\x03\x17\x1b\xcf\xbf\x04\x00\x00")

func templates_view_ticket_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_view_ticket_html,
		"templates/view_ticket.html",
	)
}

func templates_view_ticket_html() (*asset, error) {
	bytes, err := templates_view_ticket_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/view_ticket.html", size: 1215, mode: os.FileMode(420), modTime: time.Unix(1420880282, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/css/ie.css": static_css_ie_css,
	"static/css/print.css": static_css_print_css,
	"static/css/screen.css": static_css_screen_css,
	"static/hier.css": static_hier_css,
	"static/images/favicon-16.png": static_images_favicon_16_png,
	"static/images/favicon-32.png": static_images_favicon_32_png,
	"static/images/logo-large.png": static_images_logo_large_png,
	"static/images/logo-small.png": static_images_logo_small_png,
	"static/js/hier.js": static_js_hier_js,
	"templates/footer.html": templates_footer_html,
	"templates/header.html": templates_header_html,
	"templates/new_ticket.html": templates_new_ticket_html,
	"templates/ticket_list.html": templates_ticket_list_html,
	"templates/view_ticket.html": templates_view_ticket_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"static": &_bintree_t{nil, map[string]*_bintree_t{
		"css": &_bintree_t{nil, map[string]*_bintree_t{
			"ie.css": &_bintree_t{static_css_ie_css, map[string]*_bintree_t{
			}},
			"print.css": &_bintree_t{static_css_print_css, map[string]*_bintree_t{
			}},
			"screen.css": &_bintree_t{static_css_screen_css, map[string]*_bintree_t{
			}},
		}},
		"hier.css": &_bintree_t{static_hier_css, map[string]*_bintree_t{
		}},
		"images": &_bintree_t{nil, map[string]*_bintree_t{
			"favicon-16.png": &_bintree_t{static_images_favicon_16_png, map[string]*_bintree_t{
			}},
			"favicon-32.png": &_bintree_t{static_images_favicon_32_png, map[string]*_bintree_t{
			}},
			"logo-large.png": &_bintree_t{static_images_logo_large_png, map[string]*_bintree_t{
			}},
			"logo-small.png": &_bintree_t{static_images_logo_small_png, map[string]*_bintree_t{
			}},
		}},
		"js": &_bintree_t{nil, map[string]*_bintree_t{
			"hier.js": &_bintree_t{static_js_hier_js, map[string]*_bintree_t{
			}},
		}},
	}},
	"templates": &_bintree_t{nil, map[string]*_bintree_t{
		"footer.html": &_bintree_t{templates_footer_html, map[string]*_bintree_t{
		}},
		"header.html": &_bintree_t{templates_header_html, map[string]*_bintree_t{
		}},
		"new_ticket.html": &_bintree_t{templates_new_ticket_html, map[string]*_bintree_t{
		}},
		"ticket_list.html": &_bintree_t{templates_ticket_list_html, map[string]*_bintree_t{
		}},
		"view_ticket.html": &_bintree_t{templates_view_ticket_html, map[string]*_bintree_t{
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

